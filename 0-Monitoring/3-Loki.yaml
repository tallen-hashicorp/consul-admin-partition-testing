---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail
  namespace: consul-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail
rules:
  - apiGroups: [""]
    resources:
      - namespaces
      - nodes
      - pods
      - endpoints
      - podlogs
    verbs:
      - get
      - list
      - watch
  - apiGroups: [""]
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promtail
subjects:
  - kind: ServiceAccount
    name: promtail
    namespace: consul-monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: consul-monitoring
  labels:
    name: loki-config
data:
  loki-local-config.yaml: |
    auth_enabled: false

    server:
      http_listen_port: 3100
      grpc_listen_port: 9096

    common:
      instance_addr: 127.0.0.1
      path_prefix: /tmp/loki
      storage:
        filesystem:
          chunks_directory: /tmp/loki/chunks
          rules_directory: /tmp/loki/rules
      replication_factor: 1
      ring:
        kvstore:
          store: inmemory

    query_range:
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            max_size_mb: 100

    schema_config:
      configs:
        - from: 2020-10-24
          store: tsdb
          object_store: filesystem
          schema: v13
          index:
            prefix: index_
            period: 24h
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-deployment
  namespace: consul-monitoring
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
      - name: loki
        image: grafana/loki
        args:
        - "-config.file=/etc/loki/loki-local-config.yaml"
        ports:
        - containerPort: 3100
        volumeMounts:
        - name: loki-config-volume
          mountPath: /etc/loki/
        - name: loki-storage-volume
          mountPath: /loki/
      volumes:
      - name: loki-config-volume
        configMap:
          name: loki-config
      - name: loki-storage-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: loki-service
  namespace: consul-monitoring
spec:
  selector:
    app: loki
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3100
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
  namespace: consul-monitoring
  labels:
    name: promtail-config
data:
  promtail-config.yaml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0

    positions:
      filename: /tmp/positions.yaml

    clients:
      - url: http://loki-service.consul-monitoring.svc.cluster.local:3100/loki/api/v1/push

    scrape_configs:
      - job_name: kubernetes-pods
        pipeline_stages:
          - docker: {}
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - source_labels: [__meta_kubernetes_pod_container_name]
            target_label: container
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
            target_label: app
          - source_labels: [__meta_kubernetes_pod_uid, __meta_kubernetes_pod_container_name]
            separator: /
            target_label: __path__
            replacement: /var/log/pods/*$1/*.log

      - job_name: docker-containers
        pipeline_stages:
          - docker: {}
        static_configs:
          - targets:
              - localhost
            labels:
              job: docker
              __path__: /var/lib/docker/containers/*/*.log
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: promtail
  namespace: consul-monitoring
  labels:
    app: promtail
spec:
  replicas: 1
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      serviceAccountName: promtail
      containers:
        - name: promtail
          image: grafana/promtail:latest
          args:
            - "-config.file=/etc/promtail/promtail-config.yaml"
          volumeMounts:
            - name: promtail-config-volume
              mountPath: /etc/promtail/
            - name: positions
              mountPath: /tmp/
            - name: docker-containers
              mountPath: /var/lib/docker/containers
            - name: pods-logs
              mountPath: /var/log/pods
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
      volumes:
        - name: promtail-config-volume
          configMap:
            name: promtail-config
        - name: positions
          emptyDir: {}
        - name: docker-containers
          hostPath:
            path: /var/lib/docker/containers
            type: Directory
        - name: pods-logs
          hostPath:
            path: /var/log/pods
            type: Directory
